# Https를 위한 설정
# server {
#     listen 80;
#     server_name 3everide.com www.3everide.com;
#
#     location / {
#         return 301 https://$host$request_uri;
#     }
# }
#
# server {
#     listen 443 ssl;
#     server_name 3everide.com www.3everide.com;
#
#     ssl_certificate /etc/letsencrypt/live/3everide.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/3everide.com/privkey.pem;
#
#     location / {
#         proxy_pass http://localhost:8080;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # CORS 설정 추가
#         if ($request_method = 'OPTIONS') {
#             add_header 'Access-Control-Allow-Origin' 'https://3ever.vercel.app';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
#             add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
#             add_header 'Access-Control-Max-Age' 1728000;
#             add_header 'Content-Type' 'text/plain charset=UTF-8';
#             add_header 'Content-Length' 0;
#             return 204;
#         }
#
#         add_header 'Access-Control-Allow-Origin' 'https://3ever.vercel.app';
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
#         add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
#     }
# }

# # Http를 위한 설정
# server {
#     listen 80;
#     server_name ec2-3-34-144-78.ap-northeast-2.compute.amazonaws.com;
#
#     location /api/ {
#         proxy_pass http://127.0.0.1:8080;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # CORS 설정 추가
#          if ($request_method = 'OPTIONS') {
#             add_header 'Access-Control-Allow-Origin' 'https://3ever.vercel.app';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
#             add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-AUTH-TOKEN, Authorization_Refresh, Access-Control-Allow-Origin, Access-Control-Allow-Credentials';
#             add_header 'Access-Control-Allow-Credentials' 'true';
#             add_header 'Access-Control-Expose-Headers' 'Content-Type, X-AUTH-TOKEN, Authorization, Authorization_Refresh, Access-Control-Allow-Origin, Access-Control-Allow-Credentials';
#             add_header 'Access-Control-Max-Age' 1728000;
#             add_header 'Content-Type' 'text/plain; charset=UTF-8';
#             add_header 'Content-Length' 0;
#             return 204;
#         }
#
#         add_header 'Access-Control-Allow-Origin' 'https://3ever.vercel.app';
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
#         add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-AUTH-TOKEN, Authorization_Refresh, Access-Control-Allow-Origin, Access-Control-Allow-Credentials';
#         add_header 'Access-Control-Allow-Credentials' 'true';
#         add_header 'Access-Control-Expose-Headers' 'Content-Type, X-AUTH-TOKEN, Authorization, Authorization_Refresh, Access-Control-Allow-Origin, Access-Control-Allow-Credentials';
#     }
# }

server {
    listen 80;
    server_name ec2-3-34-144-78.ap-northeast-2.compute.amazonaws.com;

    location /api/ {

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        proxy_connect_timeout 300; #기본 60s
        proxy_send_timeout 300; #기본 60s
        proxy_read_timeout 300; #기본 60s
        send_timeout 300; #기본 60s

        proxy_pass http://3.34.144.78:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;



        # 실제 요청에 대한 CORS 헤더 설정
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-AUTH-TOKEN, Authorization_Refresh' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Type, X-AUTH-TOKEN, Authorization, Authorization_Refresh' always;

        # CORS 설정
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-AUTH-TOKEN, Authorization_Refresh';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=UTF-8';
            add_header 'Content-Length' '0';
            return 204;
        }
    }
}


